***배열***
1. Arrays.toString(arr)
	arr을 String 처럼 출력
	[arr[0], arr[1], arr[2], ... ]

2. Arrays.sort(arr)
	arr을 오름차순으로 정렬

3. Arrays.sort(arr, Collections.reverseOrder());
	arr이 object type으로 와야함

4. Arrays.copyOf(원본 배열, 복사할 길이)

5. arr.clone()
	arr 배열 복제

6. Arrays.binarySearch(arr, key)
	arr에서 key인 요소를 이진 검색

7. Arrays.asList(arr)
	arr을 list로 변환

8. Arrays.equals(arr1, arr2)
	boolean으로 반환

9. 2차원 배열 정렬
	Arrays.sort(arr, new Comparator<int[ ]>( ) {
		@Override
		public int compare(int[] o1, int[] o2) {
			return o1[0] == o2[0] ? o1[1] - o2[1] : o1[0] - o2[0];
		}
	};
	Arrays.sort(arr, (o1,o2) -> { return o1[0] - o2[0] };

***String***
1. string.charAt(index)
	string의 index에 있는 문자를 출력

2. string.toCharArray()
	string을 char 타입의 배열로 변환
	
3. String.toUpperCase()
	String을 대문자로 변환

4. string.indexOf()
	string에서 입력한 문자의 index를 찾아서 출력
	없으면 -1

5. string.split("", num)
	string을 ""를 기준으로 잘라 num 크기의 배열로 변환

6. StringTokenizer st = new StringTokenizer(S, " ");
	String S를 " "를 기준으로 나눠서 토큰에 저장
	st.countTokens()

7. string.repeat(idx)
	string을 idx 만큼 반복해서 출력

8. string.contains(문자열)
	string이 문자열을 포함하고 있는지를 boolean으로 반환

9. string.replace(target, replacement)
	string 내에서 target을 replacement로 바꿈

10. string.equals()
	string을 비교할 때

11. StringBuilder sb = new StringBuilder();
	sb.append("문자열");
	sb.toString();

***Collectionst***
1. list.toArray(arr)
	list를 arr에 맞게 array로 변환

2. HashMap getOrDefault(Object key, V DefaultValue)
	key : 값을 가져와야 하는 요소의 키
	defaultvalue : 지정된 키로 매핑된 값이 없는 경우 반환되어야 하는 기본값
	반환값 : 찾는 key가 존재하면 해당 key에 매핑되어 있는 값을 반환하고,
		   그렇지 않으면 디폴트 값이 반환됩니다

3. HashMap containsKey(key)
	key 값을 가지고 있는지로 boolean 반환

***Math***
1. Math.random()
	0 <= x < 10 사이 랜덤 생성
	0 <= x < 10 랜덤 정수 만드려면 *10

2. Math.cos()
	안의 값은 radian

3. Math.toRadians()
	deg 넣으면 radian으로 변환

4. Math.sqrt()
	제곱근 리턴

5. Math.abs()
	절대값 리턴

6. BigInteger
	import java.util.BigInteger;
	ex)	
	BigInteger A = new BigInteger(st.nextToken());
	BigInteger B = new BigInteger(st.nextToken());
	A = A.add(B);
	System.out,println(A.toString());

***Integer***
1. Integer.toString(int i)
	int i 를 string으로 변환

2. Integer.parseInt(String s)
	String s를 int로 변환

3. Integer.parseInt(String s, int radix)
	String s를 radix진으로 변환

4. Integer.toBinaryString(int i)
	i를 2진 문자열로 변환

***Buffer***
1. BufferedReader
	import java.io.BufferedReader;
	import java.io.BufferedWriter;
	import java.io.InputStreamReader;
	import java.io.OutputStreamWriter;

	BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
	String s = bf.readLine();
	int i = Integer.parseInt(br.readLine());
	예외처리 : throws IOException

	StringTokenizer st = new StringTokenizer(s);
	s 뒤에 구분자를 넣어줄 수 있음
	int a = Integer.parseInt(st.nextToken());
	int b = Integer.parseInt(st.nextToken());

2. BufferedWriter
	BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
	String s = "abcdefg";
	bw.write(s); // 버퍼에 있는 값 모두 출력
	bw.flush(); // 남아있는 데이터를 모두 출력시킴
	bw.close(); // 스트림을 닫음

***EOF***
1. Scanner
	Scanner sc = new Scanner(System.in);
	while(sc.hasNext()){
		~~
	}
2. BufferedReader
	BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	String S = "";
	while((S = br.readLine()) != null){
		~~
	}
